---
alwaysApply: false
---

<template>
  <div>
    <b-overlay
      :show="loading"
      rounded="sm"
      v-if="loading"
      spinner-variant="primary"
      bg-color="transparent"
      style="height: 400px"
    >
    </b-overlay>
    <div v-else>
      <!--end col-->
      <div class="row justify-content-center mt-3">
        <div class="col-12">
          <div>
            <h4 class="tst_title mb-0">
              Оценка навыков коммуникации: {{ this.main_data.result.name }}
            </h4>
          </div>
        </div>
      </div>
      <b-nav class="my-4">
        <b-nav-item :active="category == 'skills'" @click="category = 'skills'"
          >Навыки</b-nav-item
        >
        <b-nav-item :active="category == 'places'" @click="category = 'places'"
          >Оценки по сферам применения</b-nav-item
        >
        <b-nav-item :active="category == 'recs'" @click="category = 'recs'"
          >Персональные рекомендациии</b-nav-item
        >
      </b-nav>
      <div class="skills" v-if="category == 'skills'">
        <div class="title">Общие оценки навыков</div>

        <div class="mt-2">
          <div
            class="row mb-2 align-items-center d-flex pb-2 test_result"
            v-for="category in categoryComment"
            :key="'cat' + category.id"
          >
            <b-col class="d-flex align-items-center" md="6" lg="4">
              <div class="d-flex align-items-center" style="width: 550px; max-width: 75%">
                <img
                  :src="'https://api.university.skillslab.center' + category.icon"
                  alt=""
                  style="width: 25px"
                  class="mr-2"
                />
                <div class="font-weight-bold mr-2" style="line-height: 1.2">
                  {{ category.name }}
                </div>
              </div>
              <client-only>
                <VueApexCharts
                  type="radialBar"
                  height="45"
                  width="45"
                  :options="{
                    grid: {
                      show: false,
                      padding: {
                        left: -15,
                        right: -15,
                        top: -12,
                        bottom: -15,
                      },
                    },
                    colors: [category.color],
                    plotOptions: {
                      radialBar: {
                        hollow: {
                          size: '22%',
                        },
                        track: {
                          background: '#eee',
                        },
                        dataLabels: {
                          showOn: 'always',
                          name: {
                            show: false,
                          },
                          value: {
                            show: false,
                          },
                        },
                      },
                    },
                    stroke: {
                      lineCap: 'round',
                    },
                  }"
                  :series="[category.value]"
                />
              </client-only>
              <div class="ml-1 font-weight-bold">{{ category.value }}%</div>
            </b-col>

            <b-col md="6" lg="8">
              {{ category.comment }}
            </b-col>
          </div>
        </div>

        <div class="title mt-4 d-block">Детальный разбор навыков</div>
        <div class="mt-2">
          <b-nav class="my-3">
            <b-nav-item
              v-for="(category, index) in categoryComment"
              :key="'categorynav' + category.id"
              :active="index == categoryNav"
              @click="categoryNav = index"
              >{{ category.name }}</b-nav-item
            >
          </b-nav>
          <div class="category-body mb-3">
            <b-row>
              <b-col class="py-3" v-html="categoryFiltered.description"> </b-col>
            </b-row>
            <b-card-group columns>
              <b-card
                style="min-height: 100%"
                v-for="skill in categoryFiltered.skills_filtered"
                :key="'skillcat' + skill.id"
              >
                <div class="d-flex align-items-center">
                  <div>
                    <b>{{ skill.skill.name }}</b>
                  </div>
                  <client-only>
                    <VueApexCharts
                      type="radialBar"
                      height="60"
                      width="60"
                      :options="{
                        grid: {
                          show: false,
                          padding: {
                            left: -15,
                            right: -15,
                            top: -15,
                            bottom: -15,
                          },
                        },
                        colors: [skill.data.color],
                        plotOptions: {
                          radialBar: {
                            hollow: {
                              size: '42%',
                            },
                            track: {
                              background: '#eee',
                            },
                            dataLabels: {
                              showOn: 'always',
                              name: {
                                show: false,
                              },
                              value: {
                                show: true,
                                fontSize: '14px',
                                fontWeight: 'bold',
                                offsetY: 5,
                              },
                            },
                          },
                        },
                        stroke: {
                          lineCap: 'round',
                        },
                      }"
                      :series="[skill.data.value]"
                      class="ml-auto"
                    />
                  </client-only>
                </div>
                <img
                  :src="'https://api.university.skillslab.center' + skill.img"
                  class="mt-2 w-100"
                  alt=""
                />
                <div class="mt-2 small_text" v-html="skill.description"></div>
                <div class="mt-2 w-100 d-table">
                  <b>Ваш результат</b>
                  <b-alert
                    :variant="alert.color"
                    show
                    class="mt-2 d-flex align-items-center"
                    v-for="(alert, index) in skill.data.notes"
                    :key="skill.id + 'skillalert' + index"
                    >{{ alert.text }}</b-alert
                  >
                </div>
              </b-card>
            </b-card-group>
          </div>
        </div>
      </div>
      <div class="places" v-if="category == 'places'">
        <div class="title">Где и как успешно могут быть применены навыки</div>
        <b-row>
          <b-col lg="6" v-for="context in contextComment" :key="'context' + context.id">
            <b-card class="mt-2">
              <div class="d-flex">
                <div class="mr-2">
                  <b class="d-block category"> {{ context.name }} </b>
                  <div class="categoryDetail mt-2" v-html="context.description"></div>
                </div>
                <client-only>
                  <VueApexCharts
                    type="radialBar"
                    height="90"
                    width="90"
                    :options="{
                      grid: {
                        show: false,
                        padding: {
                          left: -15,
                          right: -15,
                          top: -15,
                          bottom: -15,
                        },
                      },
                      colors: [context.data.color],
                      plotOptions: {
                        radialBar: {
                          hollow: {
                            size: '42%',
                          },
                          track: {
                            background: '#eee',
                          },
                          dataLabels: {
                            showOn: 'always',
                            name: {
                              show: false,
                            },
                            value: {
                              show: true,
                              fontSize: '14px',
                              fontWeight: 'bold',
                              offsetY: 5,
                            },
                          },
                        },
                      },
                      stroke: {
                        lineCap: 'round',
                      },
                    }"
                    :series="[context.data.value]"
                    class="ml-auto"
                  />
                </client-only>
              </div>
              <div>
                <client-only>
                  <VueApexCharts
                    type="radar"
                    height="400"
                    :options="{
                      chart: {
                        toolbar: {
                          show: false,
                        },
                        dropShadow: {
                          enabled: false,
                          blur: 8,
                          left: 1,
                          top: 1,
                          opacity: 0.2,
                        },
                      },
                      legend: {
                        show: true,
                        fontSize: '14px',
                        fontFamily: 'Montserrat',
                      },
                      yaxis: {
                        show: false,
                        max: 100,
                        tickAmount: 5,
                      },
                      colors: ['#ffe700', '#00d4bd', '#826bf8'],
                      xaxis: {
                        categories: context.data.labels,
                      },
                      fill: {
                        opacity: [1, 0.8],
                      },
                      stroke: {
                        show: false,
                        width: 0,
                      },
                      markers: {
                        size: 0,
                      },
                      grid: {
                        show: false,
                      },
                    }"
                    :series="context.data.series"
                  />
                </client-only>
              </div>
              <div>
                <b class="d-block category"> Чего не хватает </b>
                <b-row>
                  <b-col
                    sm="6"
                    v-for="(miss, index) in context.data.missing"
                    :key="'miss' + context.id + index"
                  >
                    <div class="improve d-flex mt-2 align-items-start">
                      <div style="font-size: 14px">
                        <b>{{ miss.title }}</b>
                        <div>
                          <b>{{ miss.value }}%</b> — нужно не меньше
                          {{ miss.ideal_value }}%
                        </div>
                        <b-progress
                          :value="miss.value"
                          :max="miss.ideal_value"
                          :variant="miss.color"
                        ></b-progress>
                      </div>
                    </div>
                  </b-col>
                </b-row>
                <b-row class="mt-3">
                  <b-col
                    lg="12"
                    class="mt-3"
                    v-for="(warn, index) in context.data.warnings"
                    :key="'warnings' + context.id + index"
                  >
                    <b-alert
                      :variant="warn.color"
                      show
                      class="mb-0 d-flex align-items-center"
                      >{{ warn.text }}</b-alert
                    >
                  </b-col>
                </b-row>
              </div>
            </b-card>
          </b-col>
        </b-row>
      </div>
      <div class="recs" v-if="category == 'recs'">
        <div class="title">
          Подобранные для вас ресурсы и упражнения для развития нужных навыков
        </div>
        <b-nav class="mt-3 mb-3">
          <b-nav-item
            :active="num == recNav"
            @click="recNav = num"
            v-for="(category, num) in categoryComment"
            :key="'recCategory' + num"
            >{{ category.name }}</b-nav-item
          >
        </b-nav>

        <Rec
          v-for="skill in categoryRecFiltered.skills_filtered"
          :key="'skillrecf' + skill.id"
          class="mt-3"
          :skill="skill"
        />
      </div>
    </div>

  </div>
</template>

<script>
import Title from "@/components/main/Title";
import Shield from "@/components/icons/shield";
import Handshake from "@/components/icons/handshake";
import check from "@/components/icons/check";
import close from "@/components/icons/close";

import Rec from "@/components/test/Rec";
import { mapGetters } from "vuex";
export default {
  layout: "default",
  computed: {
    ...mapGetters({}),
    categoryFiltered() {
      return this.categoryComment[this.categoryNav];
    },
    categoryRecFiltered() {
      return this.categoryComment[this.recNav];
    },
    recFiltered() {
      return this.main_data.skill[this.recNav];
    },

    contextComment() {
      if (!this.main_data) return;
      var newArray = [];
      this.main_data.contexts.forEach((context) => {
        var row = context;
        row["data"] = this.main_data.result.data.contexts[row.slug];
        newArray.push(row);
      });
      return newArray.sort(function (a, b) {
        return a.data.value > b.data.value ? 1 : -1;
      });
    },
    categoryComment() {
      if (!this.main_data) return;
      var newArray = [];
      this.main_data.categories.forEach((category) => {
        var row = category;

        row["color"] = this.main_data.result.data.category[row.slug].color;
        row["value"] = this.main_data.result.data.category[row.slug].value;
        row["comment"] = this.main_data.result.data.category[row.slug].comment;

        var skillAray = [];
        row.skills.forEach((skill) => {
          var row_s = skill;
          row_s["data"] = this.main_data.result.data.skills[row_s.skill.slug];
          skillAray.push(row_s);
        });
        skillAray = skillAray.sort(function (a, b) {
          return a["data"]["value"] > b["data"]["value"] ? 1 : -1;
        });
        row["skills_filtered"] = skillAray;
        newArray.push(row);
      });
      return newArray.sort(function (a, b) {
        return a["value"] > b["value"] ? 1 : -1;
      });
    },
  },
  data() {
    return {
      category: "skills",
      categoryNav: 0,
      recNav: 0,
      recNavDetail: [],
      loading: true,
    };
  },
  components: { Title, Shield, Handshake, check, close, Rec },
  async asyncData({ $api, route }) {
    var main_data = await $api.$get(`api/tests/main_data/?slug=${route.params.slug}`);
    return { main_data };
  },
  mounted() {
    this.$nextTick(() => {
      this.loading = false;
    });
  },
  methods: {},
  head() {
    return {
      title: "Soft Skills Lab",
      meta: [
        {
          hid: "description",
          name: "description",
          content: "Оценка навыков коммуникации: " + this.main_data.result.name,
        },
        {
          hid: "og:title",
          name: "og:title",
          content: "Оценка навыков коммуникации: " + this.main_data.result.name,
        },
        // {
        //   hid: "og:image",
        //   name: "og:image",
        //   content: this.lesson.picture.replace(/^http:\/\//i, "https://"),
        // },
      ],
    };
  },
  meta: {
    menu: [
      {
        name: "Главная",
        url: "/",
      },
      {
        name: "Уроки",
        url: "/blogs",
      },
    ],
    noFooter: true,
  },
};
</script>
<style lang="scss" scoped>
.nav-link.nav-link.active {
  background-color: $primary;
  border-radius: 5px;
  color: white !important;
}
.tst_title {
  font-weight: 700;
  font-size: 40px;
  line-height: 1;
}
.title {
  font-weight: 700;
  font-size: 24px;
  line-height: 1.2;
}
.test_result {
  border-bottom: 2px #eee solid;
}
.test_result:last-child {
  border-bottom: none;
}
.small_text {
  font-size: 14px !important;
}
</style>
<style lang="scss">
@media (min-width: 992px) {
  .two {
    column-count: 1 !important;
  }
}

// X-Large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {
  .two {
    column-count: 2 !important;
  }
}
</style>
